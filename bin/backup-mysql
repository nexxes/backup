#!/bin/bash

. "$(dirname "$(readlink --canonicalize "$0")")"/backup-read-config.sh

info "Starting script"

# Where is the host located
backup-find-backend
backup-create-folders

ssh="ssh $BACKEND"

################################################################################
#
# Preparation / generate&upload config
#
################################################################################

remote_mysql_cnf="$($ssh mktemp --suffix=.cnf)"
remote_innodb_tables="$($ssh mktemp)"
remote_backup_dir="$($ssh mktemp --directory --tmpdir=\"${REMOTE_DIR}\")/backup"

info "Generating mysql config"
mysql_cnf="${BACKUP_DIR}/my.cnf"
"$(dirname "$(readlink --canonicalize "$0")")"/backup-mysql-config.sh > "$mysql_cnf"

cat >>"$mysql_cnf" <<-ENDL
	[xtrabackup]
	#compress = quicklz
	stream = xbstream
	#stream = tar
	tmpdir = $remote_backup_dir
	target-dir = $remote_backup_dir
ENDL

info "Uploading mysql config"
cat "$mysql_cnf" | $ssh "cat > \"$remote_mysql_cnf\""


################################################################################
#
# InnoDB tables
#
################################################################################

if ! innobackup_bin="$($ssh 'which innobackupex')" || ! $ssh "test -x '$innobackup_bin'"; then
	error "could not find innobackupex binary or file not executable: (tried \"$innobackup_bin\")"
	exit $ERR_INNOBACKUP
fi

info "Searching for InnoDB tables"
innodb_tables="${BACKUP_DIR}/innodb_tables.lst"
echo 'SELECT CONCAT(TABLE_SCHEMA, ".", TABLE_NAME) FROM INFORMATION_SCHEMA.TABLES WHERE (TABLE_TYPE="BASE TABLE" AND ENGINE="InnoDB")' |
$ssh "mysql --defaults-file=\"$remote_mysql_cnf\" --skip-column-names" > "$innodb_tables"

info "Uploading InnoDB tables file"
cat "$innodb_tables" | $ssh "cat > \"$remote_innodb_tables\""

info "Starting InnoDB backup"
md5sum_file="${LOG_DIR}/$(basename "$BACKUP_INNODB").md5sum"
size_file="${LOG_DIR}/$(basename "$BACKUP_INNODB").size"

$ssh "$innobackup_bin --defaults-file=\"$remote_mysql_cnf\" --no-timestamp --extra-lsndir=\"$remote_backup_dir\" --tables-file=\"$remote_innodb_tables\" --no-lock --safe-slave-backup \"$remote_backup_dir\" | $COMPRESS_BIN $COMPRESS_PARAMS" 2>"${LOG_DIR}/innodb_backup.log" |
tee >(md5sum > "$md5sum_file") >(wc --bytes > "$size_file") > "$BACKUP_INNODB"

$ssh "cd \"${remote_backup_dir}\" ; tar --create *" |
tar --extract --directory="${MYSQL_DIR}"

# FIXME: check that everything is ok

################################################################################
#
# MyISAM tables
#
################################################################################

fifo_dir="$(mktemp --directory)"
mysql_control=8
mysql_result=9
mkfifo "$fifo_dir/in.fifo"
mkfifo "$fifo_dir/out.fifo"
myisam_tables="${BACKUP_DIR}/myisam.tables"


info "Reading list of MyISAM tables"
echo 'SELECT CONCAT(TABLE_SCHEMA, ".", TABLE_NAME) FROM INFORMATION_SCHEMA.TABLES WHERE (TABLE_TYPE="BASE TABLE" AND ENGINE="MyISAM")' |
$ssh "mysql --defaults-file=\"$remote_mysql_cnf\" --skip-column-names" > "$myisam_tables"

info "Creating mysql control"
$ssh "mysql --defaults-file=\"$remote_mysql_cnf\" --skip-column-names --unbuffered --force" <"$fifo_dir/in.fifo" >"$fifo_dir/out.fifo" 2>&1 &

eval "exec $mysql_control>\"$fifo_dir/in.fifo\""
eval "exec $mysql_result<\"$fifo_dir/out.fifo\""

info "Flushing tables"
echo "FLUSH TABLES; SELECT \"flushed\";" >&$mysql_control
read -u $mysql_result
[ "$REPLY" != "flushed" ] && error "Failed to flush tables" && exit $ERR_MYSQL


# A little fix as a normal while ... done < "$myisam_tables" did break after the first iteration
exec 7<>"$myisam_tables"
myisam_tables_count=$(cat "$myisam_tables" | wc -l)
counter=0

while read -u 7; do
	(( counter++ ))
	database="${REPLY//.*/}"
	table="${REPLY//*./}"
	
	info "Working on table $counter of $myisam_tables_count: \"$database.$table\""
	
	echo "LOCK TABLE \`$database\`.\`$table\` READ; SELECT \"locked\";" >&$mysql_control
	read -u $mysql_result
	[ "$REPLY" != "locked" ] && error "failed to lock table \"$database.$table\"" && exit $ERR_MYSQL
	
	for file_remote in $($ssh "ls \"${REMOTE_DIR}/image/var/lib/mysql/\"${database//[!_0-9a-zA-Z]/*}/${table//[!_0-9a-zA-Z]/*}.*" | grep "var/lib/mysql/${database//[!_0-9a-zA-Z]/@[0-9a-zA-Z]\{2,4\}}/${table//[!_0-9a-zA-Z]/@[0-9a-zA-Z]\{2,4\}}"); do
		date_remote=$($ssh "stat --format=%y \"$file_remote\"")
		file_local="${MYSQL_DIR}/$(basename "$(dirname "$file_remote")")/$(basename "$file_remote").${COMPRESS_EXT}"
		
		mkdir --parent "$(dirname "$file_local")"
		
		$ssh "${COMPRESS_BIN} ${COMPRESS_PARAMS} --stdout "$file_remote"" > "$file_local"
		touch --date="$date_remote" "$file_local"
	done
		
	echo "UNLOCK TABLES; SELECT \"unlocked\";" >&$mysql_control
	read -u $mysql_result
	[ "$REPLY" != "unlocked" ] && error "failed to unlock table \"$database.$table\"" && exit $ERR_MYSQL
done

# FIXME: views, csv-tables, archive tables, etc


################################################################################
#
# Cleanup
#
################################################################################
	
info "Finishing"
eval "exec $mysql_control>&-"
eval "exec $mysql_result>&-"
exec 7>&-

$ssh "rm -Rf \"$remote_mysql_cnf\" \"$remote_innodb_tables\" \"$remote_backup_dir\""
rm -Rf "$fifo_dir"
